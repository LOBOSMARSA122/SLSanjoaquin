//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Sigesoft.Node.WinClient.UI.Dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsInformeElectroCardiografiaoGoldField_EKG")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsInformeElectroCardiografiaoGoldField_EKG : global::System.Data.DataSet {
        
        private InformeElectroCardiografiaoGoldField_EKGDataTable tableInformeElectroCardiografiaoGoldField_EKG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsInformeElectroCardiografiaoGoldField_EKG() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsInformeElectroCardiografiaoGoldField_EKG(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InformeElectroCardiografiaoGoldField_EKG"] != null)) {
                    base.Tables.Add(new InformeElectroCardiografiaoGoldField_EKGDataTable(ds.Tables["InformeElectroCardiografiaoGoldField_EKG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InformeElectroCardiografiaoGoldField_EKGDataTable InformeElectroCardiografiaoGoldField_EKG {
            get {
                return this.tableInformeElectroCardiografiaoGoldField_EKG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsInformeElectroCardiografiaoGoldField_EKG cln = ((dsInformeElectroCardiografiaoGoldField_EKG)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InformeElectroCardiografiaoGoldField_EKG"] != null)) {
                    base.Tables.Add(new InformeElectroCardiografiaoGoldField_EKGDataTable(ds.Tables["InformeElectroCardiografiaoGoldField_EKG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInformeElectroCardiografiaoGoldField_EKG = ((InformeElectroCardiografiaoGoldField_EKGDataTable)(base.Tables["InformeElectroCardiografiaoGoldField_EKG"]));
            if ((initTable == true)) {
                if ((this.tableInformeElectroCardiografiaoGoldField_EKG != null)) {
                    this.tableInformeElectroCardiografiaoGoldField_EKG.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsInformeElectroCardiografiaoGoldField_EKG";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsInformeElectroCardiografiaoGoldField_EKG.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInformeElectroCardiografiaoGoldField_EKG = new InformeElectroCardiografiaoGoldField_EKGDataTable();
            base.Tables.Add(this.tableInformeElectroCardiografiaoGoldField_EKG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInformeElectroCardiografiaoGoldField_EKG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsInformeElectroCardiografiaoGoldField_EKG ds = new dsInformeElectroCardiografiaoGoldField_EKG();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InformeElectroCardiografiaoGoldField_EKGRowChangeEventHandler(object sender, InformeElectroCardiografiaoGoldField_EKGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InformeElectroCardiografiaoGoldField_EKGDataTable : global::System.Data.TypedTableBase<InformeElectroCardiografiaoGoldField_EKGRow> {
            
            private global::System.Data.DataColumn columnApellidoNombre;
            
            private global::System.Data.DataColumn columnEdad;
            
            private global::System.Data.DataColumn columnSexo;
            
            private global::System.Data.DataColumn columnEmpresa;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnFrecuenciaCardiaca;
            
            private global::System.Data.DataColumn columnRitmoCardiaco;
            
            private global::System.Data.DataColumn columnIntervaloPR;
            
            private global::System.Data.DataColumn columnComplejoQRS;
            
            private global::System.Data.DataColumn columnIntervaloQTC;
            
            private global::System.Data.DataColumn columnEjeCardiaco;
            
            private global::System.Data.DataColumn columnHallazgo;
            
            private global::System.Data.DataColumn columnConclusiones;
            
            private global::System.Data.DataColumn columnObservacion;
            
            private global::System.Data.DataColumn columnFirmaMedico;
            
            private global::System.Data.DataColumn columnb_logo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InformeElectroCardiografiaoGoldField_EKGDataTable() {
                this.TableName = "InformeElectroCardiografiaoGoldField_EKG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InformeElectroCardiografiaoGoldField_EKGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InformeElectroCardiografiaoGoldField_EKGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApellidoNombreColumn {
                get {
                    return this.columnApellidoNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EdadColumn {
                get {
                    return this.columnEdad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SexoColumn {
                get {
                    return this.columnSexo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrecuenciaCardiacaColumn {
                get {
                    return this.columnFrecuenciaCardiaca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RitmoCardiacoColumn {
                get {
                    return this.columnRitmoCardiaco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IntervaloPRColumn {
                get {
                    return this.columnIntervaloPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComplejoQRSColumn {
                get {
                    return this.columnComplejoQRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IntervaloQTCColumn {
                get {
                    return this.columnIntervaloQTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EjeCardiacoColumn {
                get {
                    return this.columnEjeCardiaco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HallazgoColumn {
                get {
                    return this.columnHallazgo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConclusionesColumn {
                get {
                    return this.columnConclusiones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObservacionColumn {
                get {
                    return this.columnObservacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirmaMedicoColumn {
                get {
                    return this.columnFirmaMedico;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn b_logoColumn {
                get {
                    return this.columnb_logo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InformeElectroCardiografiaoGoldField_EKGRow this[int index] {
                get {
                    return ((InformeElectroCardiografiaoGoldField_EKGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InformeElectroCardiografiaoGoldField_EKGRowChangeEventHandler InformeElectroCardiografiaoGoldField_EKGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InformeElectroCardiografiaoGoldField_EKGRowChangeEventHandler InformeElectroCardiografiaoGoldField_EKGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InformeElectroCardiografiaoGoldField_EKGRowChangeEventHandler InformeElectroCardiografiaoGoldField_EKGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InformeElectroCardiografiaoGoldField_EKGRowChangeEventHandler InformeElectroCardiografiaoGoldField_EKGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInformeElectroCardiografiaoGoldField_EKGRow(InformeElectroCardiografiaoGoldField_EKGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InformeElectroCardiografiaoGoldField_EKGRow AddInformeElectroCardiografiaoGoldField_EKGRow(
                        string ApellidoNombre, 
                        string Edad, 
                        string Sexo, 
                        string Empresa, 
                        string Fecha, 
                        string FrecuenciaCardiaca, 
                        string RitmoCardiaco, 
                        string IntervaloPR, 
                        string ComplejoQRS, 
                        string IntervaloQTC, 
                        string EjeCardiaco, 
                        string Hallazgo, 
                        string Conclusiones, 
                        string Observacion, 
                        byte[] FirmaMedico, 
                        byte[] b_logo) {
                InformeElectroCardiografiaoGoldField_EKGRow rowInformeElectroCardiografiaoGoldField_EKGRow = ((InformeElectroCardiografiaoGoldField_EKGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ApellidoNombre,
                        Edad,
                        Sexo,
                        Empresa,
                        Fecha,
                        FrecuenciaCardiaca,
                        RitmoCardiaco,
                        IntervaloPR,
                        ComplejoQRS,
                        IntervaloQTC,
                        EjeCardiaco,
                        Hallazgo,
                        Conclusiones,
                        Observacion,
                        FirmaMedico,
                        b_logo};
                rowInformeElectroCardiografiaoGoldField_EKGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInformeElectroCardiografiaoGoldField_EKGRow);
                return rowInformeElectroCardiografiaoGoldField_EKGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InformeElectroCardiografiaoGoldField_EKGDataTable cln = ((InformeElectroCardiografiaoGoldField_EKGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InformeElectroCardiografiaoGoldField_EKGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnApellidoNombre = base.Columns["ApellidoNombre"];
                this.columnEdad = base.Columns["Edad"];
                this.columnSexo = base.Columns["Sexo"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnFrecuenciaCardiaca = base.Columns["FrecuenciaCardiaca"];
                this.columnRitmoCardiaco = base.Columns["RitmoCardiaco"];
                this.columnIntervaloPR = base.Columns["IntervaloPR"];
                this.columnComplejoQRS = base.Columns["ComplejoQRS"];
                this.columnIntervaloQTC = base.Columns["IntervaloQTC"];
                this.columnEjeCardiaco = base.Columns["EjeCardiaco"];
                this.columnHallazgo = base.Columns["Hallazgo"];
                this.columnConclusiones = base.Columns["Conclusiones"];
                this.columnObservacion = base.Columns["Observacion"];
                this.columnFirmaMedico = base.Columns["FirmaMedico"];
                this.columnb_logo = base.Columns["b_logo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnApellidoNombre = new global::System.Data.DataColumn("ApellidoNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellidoNombre);
                this.columnEdad = new global::System.Data.DataColumn("Edad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEdad);
                this.columnSexo = new global::System.Data.DataColumn("Sexo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexo);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnFrecuenciaCardiaca = new global::System.Data.DataColumn("FrecuenciaCardiaca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrecuenciaCardiaca);
                this.columnRitmoCardiaco = new global::System.Data.DataColumn("RitmoCardiaco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRitmoCardiaco);
                this.columnIntervaloPR = new global::System.Data.DataColumn("IntervaloPR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntervaloPR);
                this.columnComplejoQRS = new global::System.Data.DataColumn("ComplejoQRS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplejoQRS);
                this.columnIntervaloQTC = new global::System.Data.DataColumn("IntervaloQTC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntervaloQTC);
                this.columnEjeCardiaco = new global::System.Data.DataColumn("EjeCardiaco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjeCardiaco);
                this.columnHallazgo = new global::System.Data.DataColumn("Hallazgo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHallazgo);
                this.columnConclusiones = new global::System.Data.DataColumn("Conclusiones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclusiones);
                this.columnObservacion = new global::System.Data.DataColumn("Observacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservacion);
                this.columnFirmaMedico = new global::System.Data.DataColumn("FirmaMedico", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirmaMedico);
                this.columnb_logo = new global::System.Data.DataColumn("b_logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnb_logo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InformeElectroCardiografiaoGoldField_EKGRow NewInformeElectroCardiografiaoGoldField_EKGRow() {
                return ((InformeElectroCardiografiaoGoldField_EKGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InformeElectroCardiografiaoGoldField_EKGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InformeElectroCardiografiaoGoldField_EKGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InformeElectroCardiografiaoGoldField_EKGRowChanged != null)) {
                    this.InformeElectroCardiografiaoGoldField_EKGRowChanged(this, new InformeElectroCardiografiaoGoldField_EKGRowChangeEvent(((InformeElectroCardiografiaoGoldField_EKGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InformeElectroCardiografiaoGoldField_EKGRowChanging != null)) {
                    this.InformeElectroCardiografiaoGoldField_EKGRowChanging(this, new InformeElectroCardiografiaoGoldField_EKGRowChangeEvent(((InformeElectroCardiografiaoGoldField_EKGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InformeElectroCardiografiaoGoldField_EKGRowDeleted != null)) {
                    this.InformeElectroCardiografiaoGoldField_EKGRowDeleted(this, new InformeElectroCardiografiaoGoldField_EKGRowChangeEvent(((InformeElectroCardiografiaoGoldField_EKGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InformeElectroCardiografiaoGoldField_EKGRowDeleting != null)) {
                    this.InformeElectroCardiografiaoGoldField_EKGRowDeleting(this, new InformeElectroCardiografiaoGoldField_EKGRowChangeEvent(((InformeElectroCardiografiaoGoldField_EKGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInformeElectroCardiografiaoGoldField_EKGRow(InformeElectroCardiografiaoGoldField_EKGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInformeElectroCardiografiaoGoldField_EKG ds = new dsInformeElectroCardiografiaoGoldField_EKG();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InformeElectroCardiografiaoGoldField_EKGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InformeElectroCardiografiaoGoldField_EKGRow : global::System.Data.DataRow {
            
            private InformeElectroCardiografiaoGoldField_EKGDataTable tableInformeElectroCardiografiaoGoldField_EKG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InformeElectroCardiografiaoGoldField_EKGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInformeElectroCardiografiaoGoldField_EKG = ((InformeElectroCardiografiaoGoldField_EKGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ApellidoNombre {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.ApellidoNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ApellidoNombre\' de la tabla \'InformeElectroCardiografiaoG" +
                                "oldField_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.ApellidoNombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Edad {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.EdadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Edad\' de la tabla \'InformeElectroCardiografiaoGoldField_E" +
                                "KG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.EdadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sexo {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.SexoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Sexo\' de la tabla \'InformeElectroCardiografiaoGoldField_E" +
                                "KG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.SexoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'InformeElectroCardiografiaoGoldFiel" +
                                "d_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.EmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fecha {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'InformeElectroCardiografiaoGoldField_" +
                                "EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrecuenciaCardiaca {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.FrecuenciaCardiacaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FrecuenciaCardiaca\' de la tabla \'InformeElectroCardiograf" +
                                "iaoGoldField_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.FrecuenciaCardiacaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RitmoCardiaco {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.RitmoCardiacoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RitmoCardiaco\' de la tabla \'InformeElectroCardiografiaoGo" +
                                "ldField_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.RitmoCardiacoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IntervaloPR {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IntervaloPR\' de la tabla \'InformeElectroCardiografiaoGold" +
                                "Field_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ComplejoQRS {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.ComplejoQRSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ComplejoQRS\' de la tabla \'InformeElectroCardiografiaoGold" +
                                "Field_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.ComplejoQRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IntervaloQTC {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloQTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IntervaloQTC\' de la tabla \'InformeElectroCardiografiaoGol" +
                                "dField_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloQTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EjeCardiaco {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.EjeCardiacoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EjeCardiaco\' de la tabla \'InformeElectroCardiografiaoGold" +
                                "Field_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.EjeCardiacoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hallazgo {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.HallazgoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Hallazgo\' de la tabla \'InformeElectroCardiografiaoGoldFie" +
                                "ld_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.HallazgoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conclusiones {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.ConclusionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Conclusiones\' de la tabla \'InformeElectroCardiografiaoGol" +
                                "dField_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.ConclusionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Observacion {
                get {
                    try {
                        return ((string)(this[this.tableInformeElectroCardiografiaoGoldField_EKG.ObservacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Observacion\' de la tabla \'InformeElectroCardiografiaoGold" +
                                "Field_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.ObservacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] FirmaMedico {
                get {
                    try {
                        return ((byte[])(this[this.tableInformeElectroCardiografiaoGoldField_EKG.FirmaMedicoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FirmaMedico\' de la tabla \'InformeElectroCardiografiaoGold" +
                                "Field_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.FirmaMedicoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] b_logo {
                get {
                    try {
                        return ((byte[])(this[this.tableInformeElectroCardiografiaoGoldField_EKG.b_logoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'b_logo\' de la tabla \'InformeElectroCardiografiaoGoldField" +
                                "_EKG\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformeElectroCardiografiaoGoldField_EKG.b_logoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApellidoNombreNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.ApellidoNombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApellidoNombreNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.ApellidoNombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEdadNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.EdadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEdadNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.EdadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSexoNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.SexoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSexoNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.SexoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpresaNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.EmpresaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpresaNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.EmpresaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFechaNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFechaNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrecuenciaCardiacaNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.FrecuenciaCardiacaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrecuenciaCardiacaNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.FrecuenciaCardiacaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRitmoCardiacoNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.RitmoCardiacoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRitmoCardiacoNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.RitmoCardiacoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIntervaloPRNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIntervaloPRNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComplejoQRSNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.ComplejoQRSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComplejoQRSNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.ComplejoQRSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIntervaloQTCNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloQTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIntervaloQTCNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.IntervaloQTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEjeCardiacoNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.EjeCardiacoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEjeCardiacoNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.EjeCardiacoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHallazgoNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.HallazgoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHallazgoNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.HallazgoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConclusionesNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.ConclusionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConclusionesNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.ConclusionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObservacionNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.ObservacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObservacionNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.ObservacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirmaMedicoNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.FirmaMedicoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirmaMedicoNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.FirmaMedicoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isb_logoNull() {
                return this.IsNull(this.tableInformeElectroCardiografiaoGoldField_EKG.b_logoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setb_logoNull() {
                this[this.tableInformeElectroCardiografiaoGoldField_EKG.b_logoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InformeElectroCardiografiaoGoldField_EKGRowChangeEvent : global::System.EventArgs {
            
            private InformeElectroCardiografiaoGoldField_EKGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InformeElectroCardiografiaoGoldField_EKGRowChangeEvent(InformeElectroCardiografiaoGoldField_EKGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InformeElectroCardiografiaoGoldField_EKGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591